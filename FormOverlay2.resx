<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        750AAAAASUVORK5CYII=
</value>
  </data>
</root>